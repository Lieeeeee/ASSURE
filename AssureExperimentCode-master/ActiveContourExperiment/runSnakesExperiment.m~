function [ snakeResult ] = runSnakesExperiment( iterIn, sig1In, WlIn, WeIn, WtIn, sig2In, mIn, GIterIn, sig3In, alIn, beIn, delIn, kapIn, ...
        iterOut, sig1Out, WlOut, WeOut, WtOut, sig2Out, mOut, GIterOut, sig3Out, alOut, beOut, delOut, kapOut, ...
        imgCell, experiment_folder, kernelSize, Tlength )
%RUNSNAKESEXPERIMENT creates a snakeOptions object with the given
%parameters and runs an experiment with them. 
%   INPUT: 
%       gets all the parameters of Options we want to test twice: for in
%       and for out
%   OUTPUT:
%       returns snakeResult: the result struct from this experiment
    
    SNAKE_RUN = 2;
    TRIVIAL_RUN = 0;
    SEGNUM_TO_USE = 0;

    % create an Options struct for in and out
    OptionsIn = SnakeOptions.getSpecifiedOptions(false, iterIn, sig1In, WlIn, WeIn, WtIn, sig2In, mIn, GIterIn, sig3In, alIn, beIn, delIn, kapIn);
    OptionsOut = SnakeOptions.getSpecifiedOptions(false, iterOut, sig1Out, WlOut, WeOut, WtOut, sig2Out, mOut, GIterOut, sig3Out, alOut, beOut, delOut, kapOut);
    
    % run experiment
    [res, outMasks] =  VariabilityExperiment.holdExperiment(imgCell, kernelSize, [], experiment_folder, Tlength, TRIVIAL_RUN, SNAKE_RUN, ...
        SEGNUM_TO_USE, OptionsIn, OptionsOut);
    
    % write results to file
    
    
    % save results in struct
    snakeResult = struct;
    snakeResult.res = res;
    snakeResult.outMasks = outMasks;
    snakeResult.OptionsIn = OptionsIn;
    snakeResult.OptionsOut = OptionsOut;
    
end

